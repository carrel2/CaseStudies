{% extends 'base.html.twig' %}

{% block scripts %}
	{{ parent() }}

	<script>
		function hotspot(id, coords, color) {
			this.id = id;
			this.coords = coords;
			this.color = color;
			this.checked = false;

			this.drawDefault = function(ctx = $('#canvas-default')[0].getContext("2d")) {
				ctx.beginPath();
				ctx.moveTo(coords[0], coords[1]);

				coords.forEach(function(item, index) {
					if(index % 2 == 0) {
						ctx.lineTo(coords[index], coords[index+1]);
					}
				});

				ctx.closePath();
				ctx.fillStyle = "rgba(200,200,200,0.5)";
				ctx.fill();
			}

			this.drawHidden = function(ctx = $('#canvas-hidden')[0].getContext("2d")) {
				ctx.beginPath();
				ctx.moveTo(coords[0], coords[1]);

				coords.forEach(function(item, index) {
					if(index % 2 == 0) {
						ctx.lineTo(coords[index], coords[index+1]);
					}
				});

				ctx.closePath();
				ctx.fillStyle = color;
				ctx.fill();
			}

			this.draw = function() {
				this.drawDefault();
				this.drawHidden();
			}
		}

		var hotspotList = [];

		$(function() {
			$('body').append('<canvas id="canvas-hidden"></canvas>');

      $('#canvas-hidden').attr({height: $('#canvas-default').height(), width: $('#canvas-default').width(), style: "display: none;"});

			{% for hotspot in animal.hotspots %}
        var coords{{ hotspot.id }} = {{ "[" ~ hotspot.coords|join(",") ~ "]" }}

        coords{{ hotspot.id }}.forEach(function(item, index) {
          if( index % 2 ) {
            coords{{ hotspot.id }}[index] = item * $('canvas').height();
          } else {
            coords{{ hotspot.id }}[index] = item * $('canvas').width();
          }
        });

        var newHotspot = new hotspot({{ hotspot.id }}, coords{{ hotspot.id }}, "rgb(#,#,#)".replace(/#/g, hotspotList.length + 1));

        hotspotList.push( newHotspot );
        newHotspot.drawHidden();
      {% endfor %}

			$.data(document.body, "hotspots", hotspotList);

			$('#canvas-default').on("click", function(e) {
				var rect = this.getBoundingClientRect();
				var pos = {
					x: e.clientX - rect.left,
					y: e.clientY - rect.top
				};

				var rgb = document.getElementById("canvas-hidden").getContext("2d").getImageData(pos.x, pos.y, 1, 1);
				var pos = rgb.data[0];

				if( pos ) {
					var h = hotspotList[pos - 1];

					if( !h.checked ) {
						$.get('/symfony/web/app_dev.php/update/' + h.id, function(data, status) {
							$('#checked').append(data)
						});

						h.drawDefault();
						h.checked = true;
					}
				}
			});
		});
	</script>
{% endblock %}

{% block body %}
	{% set class = '' %}
	{% set closest = 3 %}
	{% set ratio = (size[0] / size[1])|number_format(3) %}

	{% if (1.00 - ratio)|abs < closest %}
		{% set class = 'is-1by1' %}
		{% set closest = (1.33 - ratio)|abs %}
	{% endif %}
	{% if (1.33 - ratio)|abs < closest %}
		{% set class = 'is-4by3' %}
		{% set closest = (1.33 - ratio)|abs %}
	{% endif %}
	{% if (1.50 - ratio)|abs < closest %}
		{% set class = 'is-3by2' %}
		{% set closest = (1.50 - ratio)|abs %}
	{% endif %}
	{% if (1.77 - ratio)|abs < closest %}
		{% set class = 'is-16by9' %}
		{% set closest = (1.77 - ratio)|abs %}
	{% endif %}
	{% if (2 - ratio)|abs < closest %}
		{% set class = 'is-2by1' %}
	{% endif %}

	<div class="column is-half-desktop">
		<canvas id="canvas-default" height="600" width="900" style="background-image:url({{ asset( 'images/' ~ animal.image ) }}); background-size:contain;"></canvas>
	</div>

	<div id="checked" class="column">
	</div>

	<div id="modal" class="modal">
	</div>
{% endblock %}

{% block footer %}
	<div class="tabs">
		<ul>
			<li><a>Continue</a></li>
		</ul>
	</div>

	{{ parent() }}
{% endblock %}
